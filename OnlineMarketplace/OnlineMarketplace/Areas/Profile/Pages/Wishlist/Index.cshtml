@page
@model OnlineMarketplace.Areas.Profile.Pages.Wishlist.IndexModel

@{
    ViewData["Title"] = "Index";
    string filesTypes = "";
    string rating = "";
}

@section CSS {
    <link rel="stylesheet" type="text/css" href="~/css/profile.css" />
    <link rel="stylesheet" type="text/css" href="~/css/wishlist.css" />
}

@inject SignInManager<ApplicationUser> SignInManager
@if (!SignInManager.IsSignedIn(User))
{
    Response.Redirect("/");
}
else
{
    <div class="title-block">
        <div class="user-row">
            <img class="user-image" src=@Url.Content(Model.user.Avatar) />
            <div class="user-details-col">
                <p class="user-name"><b>@Model.user.UserName</b></p>
                <p class="user-details-col__info">
                    Name: <span class="inter-text-12px">@Model.user.Name</span>
                </p>
                <p class="user-details-col__info">
                    Last name: <span class="inter-text-12px">@Model.user.LastName</span>
                </p>
                <p class="user-details-col__info">
                    Email: <span class="inter-text-12px">@Model.user.Email</span>
                </p>
                <p class="user-details-col__info">
                    Birth date: <span class="inter-text-12px">@Model.user.Date_of_birth.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("en-US"))</span>
                </p>
            </div>
        </div>
        <div class="detail-row">
            <a class="sort-button" asp-area="Profile" asp-page="/Dashboard/Index">Dashboard</a>
            <a class="sort-button left-width-0" asp-area="Profile" asp-page="/Downloads/Index">Downloads</a>
            <a class="sort-button left-width-0" asp-area="Profile" asp-page="/Reviews/Index">Reviews</a>
            <a class="sort-button-active left-width-0" asp-area="Profile" asp-page="/Wishlist/Index">Wishlist</a>
            <a class="sort-button left-width-0"  asp-area="Profile" asp-page="/Settings/Edit">Settings</a>
        </div>
    </div>
    <div class="main-content">
        <div class="content-column">
            @if (Model.WishList.Products.Count() == 0)
            {
                <p class="reviews-number-text">0 Items in your Wishlist</p>
            }
            else
            {
                @foreach (var item in Model.WishList.Products)
                {
                    <div class="item-block">
                        <img class="item-block__image" src=@Url.Content(item.ProductImage) />
                        <div class="item-block-column">
                            <a class="nav-2" asp-action="Index" asp-controller="ItemDetail" asp-route-id=@item.ProductID>
                                <h1 class="item-block-column__title">
                                    @item.ProductTitle
                                </h1>
                            </a>
                            <p class="item-block-column__description">
                                by @Model.Users.FirstOrDefault(u => u.Id == item.UserID).UserName
                            </p>
                            <div class="item-block-column-category">
                                <p class="item-block-column-category__category">Software version:<span class="item-block-column-category__text">@item.SoftwareVersion</span></p>
                                @{
                                    var files = Model.Files.Where(f => f.ProductID == item.ProductID).ToList();
                                    filesTypes = "";
                                    foreach (var file in files)
                                    {
                                        filesTypes = System.IO.Path.GetExtension(file.FileTitle) + "," + " ";
                                    }
                                    filesTypes = filesTypes.Trim();
                                    filesTypes = filesTypes.Remove(filesTypes.Length - 1);
                                }
                                <p class="item-block-column-category__category">File types included:<span class="item-block-column-category__text">@filesTypes.ToUpper().Replace(".", "")</span></p>
                                @{
                                    var reviews = Model.Reviews.Where(r => r.ProductID == item.ProductID).ToList();
                                    if (reviews.Count() != 0)
                                    {
                                        rating = reviews.Average(r => r.Grade).ToString("F1");
                                    }
                                    else
                                    {
                                        rating = "-";
                                    }
                                }
                                @if (rating == "-")
                                {
                                    <p class="item-block-column-category__category">Rating:<span class="item-block-column-category__text-grade default">@rating</span></p>
                                }
                                else
                                {
                                    @if (Convert.ToDouble(rating) > 7)
                                    {
                                        <p class="item-block-column-category__category">Rating:<span class="item-block-column-category__text-grade green">@rating</span></p>
                                    }
                                    else
                                    {
                                        @if (Convert.ToDouble(rating) < 4)
                                        {
                                            <p class="item-block-column-category__category">Rating:<span class="item-block-column-category__text-grade red">@rating</span></p>
                                        }
                                        else
                                        {
                                            <p class="item-block-column-category__category">Rating:<span class="item-block-column-category__text-grade yellow">@rating</span></p>
                                        }
                                    }
                                }
                            </div>
                        </div>
                        <div class="vert-rect"></div>
                        <div class="price-column">
                            <p class="price">@item.Price$</p>
                            <p class="desc">@item.NumberOfSales Sales</p>
                            <p class="desc">Created: @item.CreateDate.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("en-US"))</p>
                            @if (item.Is_Deleted)
                            {
                                <p class="unavailable-text">Product unavailable at this moment</p>
                            }
                            else
                            {
                                <button class="button-hover-addcart button"><span>Buy</span><i class="fa fa-shopping-cart"></i></button>
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    @section Scripts {
        <script src="js/sort-buttons-detail.js"></script>
    }
}
